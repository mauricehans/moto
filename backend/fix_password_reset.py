#!/usr/bin/env python
"""
Script pour r√©soudre les probl√®mes de r√©initialisation de mot de passe
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'agde_moto.settings')
django.setup()

from django.contrib.auth import get_user_model
from django.core.cache import cache
from django.core.management import call_command

User = get_user_model()

def main():
    print("üîß Diagnostic et r√©paration du syst√®me de r√©initialisation de mot de passe")
    print("=" * 70)
    
    # 1. V√©rifier l'utilisateur
    email = "nonhanspc@gmail.com"
    print(f"\n1. V√©rification de l'utilisateur: {email}")
    
    try:
        user = User.objects.get(email=email)
        print(f"   ‚úÖ Utilisateur trouv√©: {user.username}")
        print(f"   - Superuser: {user.is_superuser}")
        print(f"   - Actif: {user.is_active}")
        print(f"   - Staff: {user.is_staff}")
        
        if not user.is_superuser:
            print("   ‚ö†Ô∏è  L'utilisateur n'est pas un superuser. Mise √† jour...")
            user.is_superuser = True
            user.is_staff = True
            user.save()
            print("   ‚úÖ Utilisateur mis √† jour comme superuser")
            
    except User.DoesNotExist:
        print(f"   ‚ùå Utilisateur non trouv√©. Cr√©ation...")
        user = User.objects.create_user(
            username='admin_nonhans',
            email=email,
            password='TempPassword123!',
            is_superuser=True,
            is_staff=True,
            is_active=True
        )
        print(f"   ‚úÖ Superuser cr√©√©: {user.username}")
        print(f"   üìù Mot de passe temporaire: TempPassword123!")
    
    # 2. R√©initialiser le cache (rate limiting)
    print("\n2. R√©initialisation du cache (rate limiting)")
    try:
        cache.clear()
        print("   ‚úÖ Cache vid√© avec succ√®s")
    except Exception as e:
        print(f"   ‚ö†Ô∏è  Erreur lors du vidage du cache: {e}")
    
    # 3. Cr√©er la table de cache si n√©cessaire
    print("\n3. V√©rification de la table de cache")
    try:
        call_command('createcachetable', verbosity=0)
        print("   ‚úÖ Table de cache cr√©√©e/v√©rifi√©e")
    except Exception as e:
        print(f"   ‚ö†Ô∏è  Erreur avec la table de cache: {e}")
    
    # 4. V√©rifier la configuration email
    print("\n4. V√©rification de la configuration email")
    from django.conf import settings
    
    if settings.EMAIL_HOST_USER:
        print(f"   ‚úÖ EMAIL_HOST_USER configur√©: {settings.EMAIL_HOST_USER}")
    else:
        print("   ‚ö†Ô∏è  EMAIL_HOST_USER non configur√©")
        print("   üìù Ajoutez EMAIL_HOST_USER et EMAIL_HOST_PASSWORD dans .env")
    
    if settings.EMAIL_HOST_PASSWORD:
        print("   ‚úÖ EMAIL_HOST_PASSWORD configur√©")
    else:
        print("   ‚ö†Ô∏è  EMAIL_HOST_PASSWORD non configur√©")
    
    print("\n" + "=" * 70)
    print("üéâ Diagnostic termin√©!")
    print("\nüìã Prochaines √©tapes:")
    print("   1. Configurez les variables EMAIL_* dans le fichier .env")
    print("   2. Red√©marrez le serveur Django")
    print("   3. Testez la r√©initialisation de mot de passe")
    print(f"   4. Utilisez l'email: {email}")

if __name__ == '__main__':
    main()